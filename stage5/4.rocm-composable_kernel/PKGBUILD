pkgbase='rocm-composable_kernel'
pkgname=('rocm-composable_kernel')
pkgver=6.3.2
pkgrel=632000
pkgdesc="rocm-core is a utility which can be used to get ROCm release version."
arch=('loong64' 'x86_64')
license=('MIT')
url="https://github.com/ROCm/ROCT-Thunk-Interface.git"

source=(
    "git+https://github.com/ROCm/composable_kernel.git#tag=rocm-$pkgver"
    "git+https://github.com/google/googletest.git"
    "composable_kernel_loongarch.patch"
)
b2sums=('SKIP' 'SKIP' 'SKIP')
depends=(
  "rocm-clr=${pkgver}"
  "rocm-rocBLAS=${pkgver}"
)
PATH=/opt/rocm-${pkgver}/bin:$PATH

# if set AMDGPU_TARGETS != all
# MIOpen can not use CK
unset AMDGPU_TARGETS

prepare() {
  cd composable_kernel
    git apply ../composable_kernel_loongarch.patch
  cd ..
  mkdir build || true
  cd build
  EXT_CFLAGS="-pipe -fopenmp -Wl,-rpath=/opt/rocm-${pkgver}/lib -Wl,-rpath=/opt/rocm-${pkgver}/lib/llvm/lib -fPIC -stdlib=libc++ -Wno-gnu-line-marker -L/opt/rocm-${pkgver}/lib/llvm/lib -I/opt/rocm-${pkgver}/lib/llvm/include/c++/v1 -Wno-unused-command-line-argument -I/opt/rocm-${pkgver}/include  -L/opt/rocm-${pkgver}/lib -fexperimental-library -D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_NONE"
   if [ $CARCH == 'loong64' ];
  then
    EXT_CFLAGS="-mcmodel=extreme $EXT_CFLAGS"
  fi
  cmake ../composable_kernel \
   -DCMAKE_BUILD_TYPE=Release \
   -DCMAKE_FIND_ROOT_PATH="/opt/rocm-${pkgver}/" \
   -DCMAKE_PREFIX_PATH="/opt/rocm-${pkgver}/;/usr" \
   -DCMAKE_INSTALL_PREFIX=/opt/rocm-${pkgver} \
   -DCMAKE_INSTALL_RPATH="/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib/llvm/lib;/opt/rocm-${pkgver}/lib64" \
   -DCMAKE_BUILD_RPATH="/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib/llvm/lib;/opt/rocm-${pkgver}/lib64" \
   -DCMAKE_CXX_FLAGS="-parallel-jobs=$(nproc) $EXT_CFLAGS" \
   -DCMAKE_CXX_COMPILER=/opt/rocm-${pkgver}/lib/llvm/bin/clang++ \
   -DCMAKE_HIP_COMPILER_ROCM_ROOT=/opt/rocm-${pkgver} \
   -DCMAKE_HIP_FLAGS="-parallel-jobs=$(nproc) $EXT_CFLAGS" \
   -DROCM_WARN_TOOLCHAIN_VAR=OFF \
   -DBUILD_DEV=OFF \
   -DDL_KERNELS=ON \
   -DDPP_KERNELS=ON \
   -G Ninja
#  -G "Unix Makefiles"

}
build() {
  mkdir build || true
  cd build
  ninja  -l$(free -g |tail -n2|head -1|awk '{print int($2/10)}')
}

check() {
#  cd "ROCm-CompilerSupport"
#  cd build
#  make ctest
echo
}

#packaging() {

#}
package() {
  cd build
  cmake --install . --prefix "$pkgdir"/opt/rocm-${pkgver}
}
