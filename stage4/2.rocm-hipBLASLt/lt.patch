diff --git a/library/src/amd_detail/rocblaslt/src/kernels/compile_code_object.sh b/library/src/amd_detail/rocblaslt/src/kernels/compile_code_object.sh
index 4ff71ea04..b35f5a3b3 100644
--- a/library/src/amd_detail/rocblaslt/src/kernels/compile_code_object.sh
+++ b/library/src/amd_detail/rocblaslt/src/kernels/compile_code_object.sh
@@ -33,6 +33,6 @@ elif [ "$build_type" = "Debug" ]; then
     additional_options="-O0 -g"
 fi
 
-rocm_path="${ROCM_PATH:-/opt/rocm}"
-clang_path="${rocm_path}/bin/amdclang++"
-$clang_path -x hip "$sources" --offload-arch="${archs}" -c --offload-device-only -Xoffload-linker --build-id=$build_id_kind $additional_options -o "$dest"
\ No newline at end of file
+rocm_path="${ROCM_PATH:-/opt/rocm-6.3.2}"
+clang_path="${rocm_path}/lib/llvm/bin/amdclang++"
+$clang_path -x hip "$sources" --offload-arch="${archs}" -c --offload-device-only -Xoffload-linker --build-id=$build_id_kind $additional_options -o "$dest"
diff --git a/tensilelite/Tensile/Common.py b/tensilelite/Tensile/Common.py
index 6b5cdc815..c10851755 100644
--- a/tensilelite/Tensile/Common.py
+++ b/tensilelite/Tensile/Common.py
@@ -1598,12 +1598,12 @@ def assignGlobalParameters( config ):
     if os.name == "nt":
       globalParameters["AssemblerPath"] = locateExe(globalParameters["ROCmBinPath"], "clang++.exe")
     else:
-      bin_path = "llvm/bin" if globalParameters["CxxCompiler"] == "hipcc" else "bin"
+      bin_path = "bin" if globalParameters["CxxCompiler"] == "hipcc" else "lib/llvm/bin"
       compiler = "clang++" if globalParameters["CxxCompiler"] == "hipcc" else "amdclang++"
       globalParameters["AssemblerPath"] = locateExe(os.path.join(globalParameters["ROCmPath"], bin_path), compiler)
 
   globalParameters["ROCmSMIPath"] = locateExe(globalParameters["ROCmBinPath"], "rocm-smi")
-  globalParameters["ROCmLdPath"]  = locateExe(os.path.join(globalParameters["ROCmPath"], "llvm/bin"), "ld.lld")
+  globalParameters["ROCmLdPath"]  = locateExe(os.path.join(globalParameters["ROCmPath"], "lib/llvm/bin"), "ld.lld")
 
   globalParameters["ExtractKernelPath"] = locateExe(os.path.join(globalParameters["ROCmPath"], "hip/bin"), "extractkernel")
 
@@ -1613,7 +1613,7 @@ def assignGlobalParameters( config ):
     if os.name == "nt":
       globalParameters["ClangOffloadBundlerPath"] = locateExe(globalParameters["ROCmBinPath"], "clang-offload-bundler.exe")
     else:
-      globalParameters["ClangOffloadBundlerPath"] = locateExe(os.path.join(globalParameters["ROCmPath"], "llvm/bin"), "clang-offload-bundler")
+      globalParameters["ClangOffloadBundlerPath"] = locateExe(os.path.join(globalParameters["ROCmPath"], "lib/llvm/bin"), "clang-offload-bundler")
 
   if "ROCmAgentEnumeratorPath" in config:
     globalParameters["ROCmAgentEnumeratorPath"] = config["ROCmAgentEnumeratorPath"]
diff --git a/tensilelite/Tensile/Ops/gen_assembly.sh b/tensilelite/Tensile/Ops/gen_assembly.sh
index 0b21b6c67..b89f85942 100755
--- a/tensilelite/Tensile/Ops/gen_assembly.sh
+++ b/tensilelite/Tensile/Ops/gen_assembly.sh
@@ -28,12 +28,12 @@ dst=$2
 venv=$3
 build_id_kind=$4
 
-rocm_path=/opt/rocm
+rocm_path=/opt/rocm-6.3.2
 if ! [ -z ${ROCM_PATH+x} ]; then
     rocm_path=${ROCM_PATH}
 fi
 
-toolchain=${rocm_path}/llvm/bin/clang++
+toolchain=${rocm_path}/lib/llvm/bin/clang++
 
 . ${venv}/bin/activate
 
diff --git a/tensilelite/Tensile/Source/lib/CMakeLists.txt b/tensilelite/Tensile/Source/lib/CMakeLists.txt
index c71525923..ecf5ab53a 100644
--- a/tensilelite/Tensile/Source/lib/CMakeLists.txt
+++ b/tensilelite/Tensile/Source/lib/CMakeLists.txt
@@ -102,11 +102,11 @@ if(TENSILE_USE_LLVM OR TENSILE_USE_MSGPACK)
 endif()
 
 if(TENSILE_USE_MSGPACK)
-    find_package(msgpack REQUIRED)
+    find_package(msgpack-cxx REQUIRED)
     target_compile_definitions(TensileHost PUBLIC -DTENSILE_MSGPACK=1)
 
-    if(TARGET msgpackc-cxx)
-        get_target_property(msgpack_inc msgpackc-cxx INTERFACE_INCLUDE_DIRECTORIES)
+    if(TARGET msgpack-cxx)
+        get_target_property(msgpack_inc msgpack-cxx INTERFACE_INCLUDE_DIRECTORIES)
     elseif(TARGET msgpackc)
         get_target_property(msgpack_inc msgpackc INTERFACE_INCLUDE_DIRECTORIES)
     endif()
diff --git a/clients/benchmarks/CMakeLists.txt b/clients/benchmarks/CMakeLists.txt
index 99ec31f3d..dfa483885 100644
--- a/clients/benchmarks/CMakeLists.txt
+++ b/clients/benchmarks/CMakeLists.txt
@@ -45,11 +45,6 @@ target_include_directories( hipblaslt-bench
 
 target_link_libraries( hipblaslt-bench PRIVATE ${BLAS_LIBRARY} roc::hipblaslt )
 
-if( CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
-  # GCC or hip-clang needs specific flags to turn on f16c intrinsics
-  target_compile_options( hipblaslt-bench PRIVATE -mf16c )
-endif( )
-
 target_compile_definitions( hipblaslt-bench PRIVATE HIPBLASLT_BENCH ROCM_USE_FLOAT16 HIPBLASLT_INTERNAL_API ${TENSILE_DEFINES} )
 if ( NOT BUILD_FORTRAN_CLIENTS )
   target_compile_definitions( hipblaslt-bench PRIVATE CLIENTS_NO_FORTRAN )
@@ -80,7 +75,7 @@ if (NOT WIN32)
   else()
     target_link_libraries( hipblaslt-bench PRIVATE lapack cblas )
   endif()
-  list( APPEND COMMON_LINK_LIBS "-lm -lstdc++fs")
+  list( APPEND COMMON_LINK_LIBS "-lm")
 
   if (CMAKE_Fortran_COMPILER_ID MATCHES "GNU")
     list( APPEND COMMON_LINK_LIBS "-lgfortran") # for lapack
@@ -172,7 +167,7 @@ foreach( exe ${ext_bench_list_all} )
 
   if( CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
     # GCC or hip-clang needs specific flags to turn on f16c intrinsics
-    target_compile_options( ${exe} PRIVATE -mf16c -Wno-unused-result )
+    target_compile_options( ${exe} PRIVATE -Wno-unused-result )
     target_compile_definitions( ${exe} PRIVATE ROCBLASLT_INTERNAL_API )
   endif( )
 endforeach( )
diff --git a/clients/gtest/CMakeLists.txt b/clients/gtest/CMakeLists.txt
index 99cebc17b..0712b7cfe 100644
--- a/clients/gtest/CMakeLists.txt
+++ b/clients/gtest/CMakeLists.txt
@@ -73,10 +73,6 @@ else()
   target_link_libraries( hipblaslt-test PRIVATE ${CUDA_LIBRARIES} )
 endif()
 
-if( CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
-  # GCC or hip-clang needs specific flag to turn on f16c intrinsics
-  target_compile_options( hipblaslt-test PRIVATE -mf16c )
-endif( )
 
 target_compile_definitions( hipblaslt-test PRIVATE ROCM_USE_FLOAT16 HIPBLASLT_INTERNAL_API )
 
@@ -89,7 +85,7 @@ else()
   target_link_libraries( hipblaslt-test PRIVATE lapack cblas )
 endif()
 
-list( APPEND COMMON_LINK_LIBS "-lm -lstdc++fs")
+list( APPEND COMMON_LINK_LIBS "-lm")
 
 if (CMAKE_Fortran_COMPILER_ID MATCHES "GNU")
   list( APPEND COMMON_LINK_LIBS "-lgfortran") # for lapack
diff --git a/clients/samples/CMakeLists.txt b/clients/samples/CMakeLists.txt
index 6cb2a7d16..1aa167c0d 100644
--- a/clients/samples/CMakeLists.txt
+++ b/clients/samples/CMakeLists.txt
@@ -127,7 +127,7 @@ foreach( exe ${sample_list_all} )
 
   if( CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
     # GCC or hip-clang needs specific flags to turn on f16c intrinsics
-    target_compile_options( ${exe} PRIVATE -mf16c -Wno-unused-result )
+    target_compile_options( ${exe} PRIVATE -Wno-unused-result )
     target_compile_definitions( ${exe} PRIVATE ROCBLASLT_INTERNAL_API )
   endif( )
   if( LEGACY_HIPBLAS_DIRECT )
